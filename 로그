{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import folium\n",
    "from pandas import DataFrame   # 데이터 분석 패키지\n",
    "from pandas import ExcelFile \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import font_manager, rc\n",
    "\n",
    "from sklearn import datasets\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>route_id</th>\n",
       "      <th>vh_id</th>\n",
       "      <th>route_nm</th>\n",
       "      <th>now_latitude</th>\n",
       "      <th>now_longitude</th>\n",
       "      <th>now_station</th>\n",
       "      <th>now_arrive_time</th>\n",
       "      <th>distance</th>\n",
       "      <th>next_station</th>\n",
       "      <th>next_latitude</th>\n",
       "      <th>next_longitude</th>\n",
       "      <th>next_arrive_time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>210452</td>\n",
       "      <td>210452</td>\n",
       "      <td>2019-10-28</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>281-2</td>\n",
       "      <td>33.255783</td>\n",
       "      <td>126.577450</td>\n",
       "      <td>비석거리</td>\n",
       "      <td>21시</td>\n",
       "      <td>528.0</td>\n",
       "      <td>삼아아파트</td>\n",
       "      <td>33.251896</td>\n",
       "      <td>126.574417</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210453</td>\n",
       "      <td>210453</td>\n",
       "      <td>2019-10-28</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>281-2</td>\n",
       "      <td>33.248595</td>\n",
       "      <td>126.568527</td>\n",
       "      <td>동문로터리</td>\n",
       "      <td>21시</td>\n",
       "      <td>280.0</td>\n",
       "      <td>매일올레시장 7번입구</td>\n",
       "      <td>33.249753</td>\n",
       "      <td>126.565959</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210454</td>\n",
       "      <td>210454</td>\n",
       "      <td>2019-10-28</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>281-2</td>\n",
       "      <td>33.251891</td>\n",
       "      <td>126.560303</td>\n",
       "      <td>서귀포시 구 버스터미널</td>\n",
       "      <td>21시</td>\n",
       "      <td>114.0</td>\n",
       "      <td>아랑조을거리 입구</td>\n",
       "      <td>33.251084</td>\n",
       "      <td>126.559551</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210455</td>\n",
       "      <td>210455</td>\n",
       "      <td>2019-10-28</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>281-2</td>\n",
       "      <td>33.251084</td>\n",
       "      <td>126.559551</td>\n",
       "      <td>아랑조을거리 입구</td>\n",
       "      <td>21시</td>\n",
       "      <td>223.0</td>\n",
       "      <td>평생학습관</td>\n",
       "      <td>33.249504</td>\n",
       "      <td>126.558068</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210456</td>\n",
       "      <td>210456</td>\n",
       "      <td>2019-10-28</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>281-2</td>\n",
       "      <td>33.248487</td>\n",
       "      <td>126.511195</td>\n",
       "      <td>대륜동주민센터</td>\n",
       "      <td>21시</td>\n",
       "      <td>189.0</td>\n",
       "      <td>서귀포버스터미널(가상정류소)</td>\n",
       "      <td>33.249091</td>\n",
       "      <td>126.509224</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            id        date   route_id    vh_id route_nm  now_latitude  \\\n",
       "210452  210452  2019-10-28  405328102  7983486    281-2     33.255783   \n",
       "210453  210453  2019-10-28  405328102  7983486    281-2     33.248595   \n",
       "210454  210454  2019-10-28  405328102  7983486    281-2     33.251891   \n",
       "210455  210455  2019-10-28  405328102  7983486    281-2     33.251084   \n",
       "210456  210456  2019-10-28  405328102  7983486    281-2     33.248487   \n",
       "\n",
       "        now_longitude   now_station now_arrive_time  distance  \\\n",
       "210452     126.577450          비석거리             21시     528.0   \n",
       "210453     126.568527         동문로터리             21시     280.0   \n",
       "210454     126.560303  서귀포시 구 버스터미널             21시     114.0   \n",
       "210455     126.559551     아랑조을거리 입구             21시     223.0   \n",
       "210456     126.511195       대륜동주민센터             21시     189.0   \n",
       "\n",
       "           next_station  next_latitude  next_longitude  next_arrive_time  \n",
       "210452            삼아아파트      33.251896      126.574417                96  \n",
       "210453      매일올레시장 7번입구      33.249753      126.565959                50  \n",
       "210454        아랑조을거리 입구      33.251084      126.559551                16  \n",
       "210455            평생학습관      33.249504      126.558068                38  \n",
       "210456  서귀포버스터미널(가상정류소)      33.249091      126.509224                24  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bus = pd.read_csv('bus_train.csv', encoding = 'utf-8')\n",
    "bus.head(5)\n",
    "bus.tail(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# date column을 pandas의 datetime 타입으로 변경\n",
    "bus['date'] = bus.date.apply(pd.to_datetime)\n",
    "\n",
    "# datetime 타입에서 년,월,일,시간 추출\n",
    "bus['year']=bus.date.apply(lambda x:x.year)\n",
    "bus['month']=bus.date.apply(lambda x:x.month)\n",
    "bus['day']=bus.date.apply(lambda x:x.day)\n",
    "\n",
    "# now_arrive_time 을 int형으로 변경\n",
    "bus['now_arrive_time']=bus.now_arrive_time.str.split('시').str[0]\n",
    "bus['now_arrive_time']=pd.to_numeric(bus['now_arrive_time'])\n",
    "\n",
    "# day칼럼을 휴일이면 0, 평일이면 1로 categorical로 변경\n",
    "bus.loc[bus['day'].isin([19,20,26,27]), 'day'] = 0\n",
    "bus.loc[bus['day'].isin([19,20,26,27])==False, 'day'] = 1\n",
    "bus.head()\n",
    "\n",
    "# year, month칼럼은 모두 2019년 10월로 공통값이므로 drop\n",
    "drop_columns=['id', 'route_nm', 'now_station','next_station','date', 'year', 'month']\n",
    "bus.drop(drop_columns, axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>vh_id</th>\n",
       "      <th>now_latitude</th>\n",
       "      <th>now_longitude</th>\n",
       "      <th>now_arrive_time</th>\n",
       "      <th>distance</th>\n",
       "      <th>next_latitude</th>\n",
       "      <th>next_longitude</th>\n",
       "      <th>next_arrive_time</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>405136001</td>\n",
       "      <td>7997025</td>\n",
       "      <td>33.456267</td>\n",
       "      <td>126.551750</td>\n",
       "      <td>6</td>\n",
       "      <td>266.0</td>\n",
       "      <td>33.457724</td>\n",
       "      <td>126.554014</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>405136001</td>\n",
       "      <td>7997025</td>\n",
       "      <td>33.457724</td>\n",
       "      <td>126.554014</td>\n",
       "      <td>6</td>\n",
       "      <td>333.0</td>\n",
       "      <td>33.458783</td>\n",
       "      <td>126.557353</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>405136001</td>\n",
       "      <td>7997025</td>\n",
       "      <td>33.458783</td>\n",
       "      <td>126.557353</td>\n",
       "      <td>6</td>\n",
       "      <td>415.0</td>\n",
       "      <td>33.459893</td>\n",
       "      <td>126.561624</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>405136001</td>\n",
       "      <td>7997025</td>\n",
       "      <td>33.479705</td>\n",
       "      <td>126.543811</td>\n",
       "      <td>6</td>\n",
       "      <td>578.0</td>\n",
       "      <td>33.484860</td>\n",
       "      <td>126.542928</td>\n",
       "      <td>42</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>405136001</td>\n",
       "      <td>7997025</td>\n",
       "      <td>33.485662</td>\n",
       "      <td>126.494923</td>\n",
       "      <td>7</td>\n",
       "      <td>374.0</td>\n",
       "      <td>33.485822</td>\n",
       "      <td>126.490897</td>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210452</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>33.255783</td>\n",
       "      <td>126.577450</td>\n",
       "      <td>21</td>\n",
       "      <td>528.0</td>\n",
       "      <td>33.251896</td>\n",
       "      <td>126.574417</td>\n",
       "      <td>96</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210453</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>33.248595</td>\n",
       "      <td>126.568527</td>\n",
       "      <td>21</td>\n",
       "      <td>280.0</td>\n",
       "      <td>33.249753</td>\n",
       "      <td>126.565959</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210454</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>33.251891</td>\n",
       "      <td>126.560303</td>\n",
       "      <td>21</td>\n",
       "      <td>114.0</td>\n",
       "      <td>33.251084</td>\n",
       "      <td>126.559551</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210455</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>33.251084</td>\n",
       "      <td>126.559551</td>\n",
       "      <td>21</td>\n",
       "      <td>223.0</td>\n",
       "      <td>33.249504</td>\n",
       "      <td>126.558068</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>210456</td>\n",
       "      <td>405328102</td>\n",
       "      <td>7983486</td>\n",
       "      <td>33.248487</td>\n",
       "      <td>126.511195</td>\n",
       "      <td>21</td>\n",
       "      <td>189.0</td>\n",
       "      <td>33.249091</td>\n",
       "      <td>126.509224</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>210457 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         route_id    vh_id  now_latitude  now_longitude  now_arrive_time  \\\n",
       "0       405136001  7997025     33.456267     126.551750                6   \n",
       "1       405136001  7997025     33.457724     126.554014                6   \n",
       "2       405136001  7997025     33.458783     126.557353                6   \n",
       "3       405136001  7997025     33.479705     126.543811                6   \n",
       "4       405136001  7997025     33.485662     126.494923                7   \n",
       "...           ...      ...           ...            ...              ...   \n",
       "210452  405328102  7983486     33.255783     126.577450               21   \n",
       "210453  405328102  7983486     33.248595     126.568527               21   \n",
       "210454  405328102  7983486     33.251891     126.560303               21   \n",
       "210455  405328102  7983486     33.251084     126.559551               21   \n",
       "210456  405328102  7983486     33.248487     126.511195               21   \n",
       "\n",
       "        distance  next_latitude  next_longitude  next_arrive_time  day  \n",
       "0          266.0      33.457724      126.554014                24    1  \n",
       "1          333.0      33.458783      126.557353                36    1  \n",
       "2          415.0      33.459893      126.561624                40    1  \n",
       "3          578.0      33.484860      126.542928                42    1  \n",
       "4          374.0      33.485822      126.490897                64    1  \n",
       "...          ...            ...             ...               ...  ...  \n",
       "210452     528.0      33.251896      126.574417                96    1  \n",
       "210453     280.0      33.249753      126.565959                50    1  \n",
       "210454     114.0      33.251084      126.559551                16    1  \n",
       "210455     223.0      33.249504      126.558068                38    1  \n",
       "210456     189.0      33.249091      126.509224                24    1  \n",
       "\n",
       "[210457 rows x 10 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c5ec7377c8>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(bus['distance'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(bus['distance'])\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c5ec62abc8>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#log변환\n",
    "bus[\"distance\"] = np.log1p(bus[\"distance\"])\n",
    "sns.distplot(bus[\"distance\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
